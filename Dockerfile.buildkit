# BuildKit-optimized Dockerfile with caching
# This version uses BuildKit features for faster builds
# To use: DOCKER_BUILDKIT=1 docker build -f Dockerfile.buildkit -t notion-mcp-server .

# syntax=docker/dockerfile:1

# Use Node.js LTS as the base image
FROM node:20-slim AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies (including dev dependencies for build)
# BuildKit cache mount speeds up repeated builds
RUN --mount=type=cache,target=/root/.npm npm ci --ignore-scripts

# Copy source code
COPY . .

# Build the package
RUN --mount=type=cache,target=/root/.npm npm run build

# Minimal image for runtime
FROM node:20-slim

# Set working directory
WORKDIR /app

# Copy built files
COPY --from=builder /app/bin ./bin
COPY --from=builder /app/build ./build
COPY --from=builder /app/scripts/notion-openapi.json ./scripts/
COPY --from=builder /app/package*.json ./

# Install only production dependencies
RUN --mount=type=cache,target=/root/.npm npm ci --ignore-scripts --omit-dev

# Set default environment variables
ENV NOTION_API_VERSION="2022-06-28"
ENV PORT=3000
ENV NODE_ENV=production

# Expose port for remote connections
EXPOSE 3000

# Default to stdio mode for backward compatibility
# Override with CMD to use remote mode
ENTRYPOINT ["node"]
CMD ["bin/cli.mjs"]

